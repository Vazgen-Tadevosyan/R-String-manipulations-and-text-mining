wordcloud(words =samsung_df$terms, freq = samsung_df$freqs, min.freq = 20,max.words=100, random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(words =apple_df$terms, freq = apple_df$freqs, min.freq = 20,max.words=100, random.order=FALSE, colors=brewer.pal(8, "Dark2"))
unique(mobile$Brand.Name[1:500,])
unique(mobile$Brand.Name[1:500])
unique(mobile$Brand.Name[1:5000])
library(qdap)
mobile$Reviews<-iconv(mobile$Reviews,to="ASCII",sub="")
##we need to subset 5000 rows randomly because as you see there are only 9  phones to do sentiment analysis on.
sent<-mobile[sample(nrow(mobile), 5000), ]
unique(sent$Brand.Name)
sent$Reviews<-str_remove_all(sent$Reviews,pattern = "[:punct:]")
unique(sent$Brand.Name)
sent<-sent%>%
filter(sent$nchar>20 & sent$nchar<150)
polarity(text.var = sent$Reviews,grouping.var = sent$Brand.Name)
polarity(text.var = sent$Reviews,grouping.var = sent$Brand.Name,arrange(ave.polarity))
polarity(text.var = sent$Reviews,grouping.var = sent$Brand.Name,arrange=T)
pol<-polarity(text.var = sent$Reviews,grouping.var = sent$Brand.Name)
pol
mobile$Reviews<-iconv(mobile$Reviews,to="ASCII",sub="")
unique(mobile$Brand.Name[1:5000])
##we need to subset 5000 rows randomly because as you see there are only 9  phones to do sentiment analysis on.
sent<-mobile[sample(nrow(mobile), 5000), ]
unique(sent$Brand.Name)
sent$Reviews<-str_remove_all(sent$Reviews,pattern = "[:punct:]")
pol<-polarity(text.var = sent$Reviews,grouping.var = sent$Brand.Name)
pol<-polarity(text.var = sent$Reviews,grouping.var = sent$Brand.Name)
``
pol
pol
library(qdap)
View(review_dtm)
View(samsung_m)
View(samsung_df)
mobile$Reviews<-iconv(mobile$Reviews,to="ASCII",sub="")
pol<-scores(pol)
pol
mobile$Reviews<-iconv(mobile$Reviews,to="ASCII",sub="")
mobile$Reviews<-iconv(mobile$Reviews,to="ASCII",sub="")
unique(mobile$Brand.Name[1:5000])
##we need to subset 5000 rows randomly because as you see there are only 9  phones to do sentiment analysis on.
sent<-mobile[sample(nrow(mobile), 5000), ]
unique(sent$Brand.Name)
sent$Reviews<-str_remove_all(sent$Reviews,pattern = "[:punct:]")
sent<-sent%>%
filter(sent$nchar>15 & sent$nchar<150)
pol<-polarity(text.var = sent$Reviews,grouping.var = sent$Brand.Name)
pol<-scores(pol)
pol
##we need to subset 5000 rows randomly because as you see there are only 9  phones to do sentiment analysis on.
sent<-mobile[sample(nrow(mobile), 5000), ]
sent$Reviews<-str_remove_all(sent$Reviews,pattern = "[:punct:]")
sent<-sent%>%
filter(sent$nchar>15 & sent$nchar<150)
pol<-polarity(text.var = sent$Reviews,grouping.var = sent$Brand.Name)
pol<-scores(pol)
pol
##we need to subset 5000 rows randomly because as you see there are only 9  phones to do sentiment analysis on first 5000 rows.
sent<-mobile[sample(nrow(mobile), 5000), ]
sent$Reviews<-str_remove_all(sent$Reviews,pattern = "[:punct:]")
sent<-sent%>%
filter(sent$nchar>15 & sent$nchar<150)
pol<-polarity(text.var = sent$Reviews,grouping.var = sent$Brand.Name)
pol<-scores(pol)
pol
pol%>%
arrange(pol$ave.polarity)
pol<-pol%>%
arrange(desc(pol$ave.polarity))
pol
#!
users<-mobile[sample(nrow(mobile), 1000), ]
users$Reviews<-str_remove_all(users$Reviews,pattern = "[:punct:]")
users<-users%>%
filter(users$nchar>15)
user<-c(1:1000)
df<-data.frame(user,users$Reviews)
#!
users<-mobile[sample(nrow(mobile), 1000), ]
users$Reviews<-str_remove_all(users$Reviews,pattern = "[:punct:]")
user<-c(1:1000)
df<-data.frame(user,users$Reviews)
avg<-scores(polarity(text.var = df$users.Reviews,grouping.var = df$user))
avg
head(avg)
user-id<-c(1:1000)
user_id<-c(1:1000)
df<-data.frame(user,users$Reviews)
avg<-scores(polarity(text.var = df$users.Reviews,grouping.var = df$user))
avg<-scores(polarity(text.var = df$users.Reviews,grouping.var = df$user))
head(avg)
#2
df2<-data.frame(BRAND=users$Brand.Name,POLARITY=avg$ave.polarity)
head(df2)
cbind(id=rownames(df2),df2)
df3<-cbind(id=rownames(df2),df2)
head(df3)
#2
df2<-data.frame(BRAND=users$Brand.Name,REVIEWS=users$Reviews,RATING=users$Rating)
df3<-cbind(id=rownames(df2),df2)
head(df3)
#2
df2<-data.frame(BRAND=users$Brand.Name,REVIEWS=users$Reviews,RATING=users$Rating)
df3<-cbind(id=rownames(df2),df2)
head(df3)
df3$POLARITY<avg$ave.polarity
head(df3,2)
#3
df3$POLARITY<-avg$ave.polarity
head(df3,2)
#4
ggplot(df3, aes(df3$POLARITY,df3$RATING))+geom_boxplot()
#4
ggplot(df3, aes(df3$RATING,df3$POLARITY))+geom_boxplot()
#4
ggplot(df3, aes(factor(df3$RATING),df3$POLARITY))+geom_boxplot()
#4
ggplot(df3, aes(df3$POLARITY,factor(df3$RATING),))+geom_boxplot()
#4
ggplot(df3, aes(df3$POLARITY,factor(df3$RATING)))+geom_boxplot()
#4
ggplot(df3, aes(factor(df3$RATING),df3$POLARITY))+geom_boxplot()
#4
fill <- "#4271AE"
line <- "#1F3552"
ggplot(df3, aes(factor(df3$RATING),df3$POLARITY))+geom_boxplot(fill = fill, colour = line) +
scale_y_continuous(name = "Mean ozone in\nparts per billion",
breaks = seq(0, 175, 25),
limits=c(0, 175)) +
scale_x_discrete(name = "Month") +
ggtitle("Boxplot of mean ozone by month") +
theme_economist() +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.position = "bottom", legend.direction = "horizontal",
legend.box = "horizontal",
legend.key.size = unit(1, "cm"),
plot.title = element_text(family="Tahoma"),
text = element_text(family = "Tahoma"),
axis.title = element_text(size = 12),
legend.text = element_text(size = 9),
legend.title=element_text(face = "bold", size = 9))
ggplot(df3, aes(factor(df3$RATING),df3$POLARITY))+geom_boxplot(fill = fill, colour = line) +
scale_y_continuous(name = "Mean ozone in\nparts per billion",
breaks = seq(0, 175, 25),
limits=c(0, 175)) +
scale_x_discrete(name = "Month") +
ggtitle("Boxplot of mean ozone by month") +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.position = "bottom", legend.direction = "horizontal",
legend.box = "horizontal",
legend.key.size = unit(1, "cm"),
plot.title = element_text(family="Tahoma"),
text = element_text(family = "Tahoma"),
axis.title = element_text(size = 12),
legend.text = element_text(size = 9),
legend.title=element_text(face = "bold", size = 9))
ggplot(df3, aes(factor(df3$RATING),df3$POLARITY))+geom_boxplot(fill = fill, colour = line) +
scale_y_continuous(name = "Mean ozone in\nparts per billion",
breaks = seq(0, 175, 25),
limits=c(0, 175)) +
scale_x_discrete(name = "Month") #+
ggplot(df3, aes(factor(df3$RATING),df3$POLARITY))+geom_boxplot(fill = fill, colour = line) +
scale_y_continuous(name = "Mean ozone in\nparts per billion",
breaks = seq(0, 1, 0.025),
limits=c(0, 175)) +
scale_x_discrete(name = "Month") #+
ggplot(df3, aes(factor(df3$RATING),df3$POLARITY))+geom_boxplot(fill = fill, colour = line) +
scale_y_continuous(name = "Mean ozone in\nparts per billion",
breaks = seq(0, 1, 0.025),
limits=c(0, 3)) +
scale_x_discrete(name = "Month") #+
ggplot(df3, aes(factor(df3$RATING),df3$POLARITY))+geom_boxplot(fill = fill, colour = line) +
scale_y_continuous(name = "Mean ozone in\nparts per billion")+
scale_x_discrete(name = "Month") #+
ggplot(df3, aes(factor(df3$RATING),df3$POLARITY))+geom_boxplot(fill = fill, colour = line) +
scale_y_continuous(name = "average polarity score")+
scale_x_discrete(name = "Rating") #+
ggplot(df3, aes(factor(df3$RATING),df3$POLARITY))+geom_boxplot(fill = fill, colour = line) +
scale_y_continuous(name = "average polarity score")+
scale_x_discrete(name = "Rating") +
ggtitle("the rating given by the user and polarity score") #+
ggplot(df3, aes(factor(df3$RATING),df3$POLARITY))+geom_boxplot(fill = fill, colour = line) +
scale_y_continuous(name = "average polarity score")+
scale_x_discrete(name = "Rating") +
ggtitle("The rating given by the user and polarity score") +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.position = "bottom", legend.direction = "horizontal",
legend.box = "horizontal",
legend.key.size = unit(1, "cm"),
plot.title = element_text(family="Tahoma"),
text = element_text(family = "Tahoma"),
axis.title = element_text(size = 12),
legend.text = element_text(size = 9),
legend.title=element_text(face = "bold", size = 9))
ggplot(df3, aes(factor(df3$RATING),df3$POLARITY))+geom_boxplot(fill = fill, colour = line) +
scale_y_continuous(name = "average polarity score")+
scale_x_discrete(name = "Rating") +
ggtitle("The rating given by the user and polarity score") +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.position = "bottom", legend.direction = "horizontal",
legend.box = "horizontal",
legend.key.size = unit(1, "cm"),
axis.title = element_text(size = 12),
legend.text = element_text(size = 9),
legend.title=element_text(face = "bold", size = 9))
ifelse(df3$POLARITY<0,"NEgative",df3$POLARITY==0,"Neutral","Positive")
ifelse(df3$POLARITY<0,"NEgative",df3$POLARITY==0,"Neutral",else "Positive")
a<-ifelse(df3$POLARITY<0,"NEgative",df3$POLARITY==0,"Neutral","Positive")
a<-ifelse(df3$POLARITY<0,"NEgative",df3$POLARITY==0,"Neutral","Positive")
a<-ifelse(df3$POLARITY<0,"NEgative",df3$POLARITY==0,"Neutral",df3$POLARITY>0,"Positive")
a<-ifelse(df3$POLARITY<0,"Negative",df3$POLARITY==0,"Neutral",df3$POLARITY>0,"Positive")
a<-ifelse(df3$POLARITY<0,"Negative",df3$POLARITY=0,"Neutral",df3$POLARITY>0,"Positive")
a<-ifelse(df3$POLARITY<0,"Negative",df3$POLARITY==0,"Neutral",df3$POLARITY>0,"Positive")
a<-ifelse(df3$POLARITY<0,"Negative",df3$POLARITY==0,"Neutral",df3$POLARITY>0,"Positive")
a<-ifelse(df3$POLARITY<0,"Negative",df3$POLARITY==0,"Neutral",NA,df3$POLARITY>0,"Positive")
a<-ifelse(df3$POLARITY<0,"Negative")
df3$POLARITY<-ifelse(df3$POLARITY<0,"Negative",df3$POLARITY==0,"Neutral","Positive")
df3$POLARITY<-ifelse(df3$POLARITY<0,"Negative",df3$POLARITY==0,"Neutral",df3$POLARITY>0,"Positive")
class(df3$POLARITY)
df3$POLARITY>0
df3$POLARITY<-ifelse(df3$POLARITY<0,"Negative",df3$POLARITY==0,"Neutral",df3$POLARITY>0,"Positive")
df3$POLARITY<-ifelse(df3$POLARITY<0,"Negative",df3$POLARITY==0,"Neutral",df3$POLARITY>0,"Positive")
df3$POLARITY<-ifelse(df3$POLARITY<0,"Negative",df3$POLARITY==0,"Neutral",df3$POLARITY>0,"Positive",NA)
df3$POLARITY<-ifelse(df3$POLARITY<0,"Negative",df3$POLARITY,df3$POLARITY==0,"Neutral",df3$POLARITY,df3$POLARITY>0,"Positive",NA)
df3$POLARITY<-ifelse(df3$POLARITY<0,df3$POLARITY="Negative",df3$POLARITY==0,df3$POLARITY="Neutral",df3$POLARITY>0,df3$POLARITY="Positive",NA)
str(df3$POLARITY)
a<-c(-3,4,-2,0,324,0,234)
a<-ifelse(a>0,"win")
a<-ifelse(a>0,"win",NA)
a
a<-c(-3,4,-2,0,324,0,234)
a
a<-ifelse(a>0,"win",a<0,"loss","draw")
a<-ifelse(a>0,"win",a<0,"loss","draw")
a<-ifelse(a>0,"win",a<0,"loss",a=="draw")
a<-ifelse(a>0,"win",a<0,"loss",a==0,"draw")
a
a<-c(-3,4,-2,0,324,0,234)
a<-ifelse(a>0,"win",a<0,"loss",a==0,"draw")
a
a<-ifelse(a>0,"win",a<0,"loss",a==0,"draw",NA)
a<-ifelse(a>0,"win"ifelse(a<0,"loss")ifelse(a==0,"draw",NA))
a<-ifelse(a>0,"win",ifelse(a<0,"loss")ifelse(a==0,"draw",NA))
a<-ifelse(a>0,"win",ifelse(a<0,"loss"),ifelse(a==0,"draw",NA))
a<-ifelse(a>0,"win",)ifelse(a<0,"loss"),ifelse(a==0,"draw",NA))
a<-c(-3,4,-2,0,324,0,234)
a<-if_else(a>0,"win",a<0,"loss",a==0,"draw",NA))
a<-if_else(a>0,"win",a<0,"loss",a==0,"draw",NA)
library(dplyr)
a<-if_else(a>0,"win",a<0,"loss",a==0,"draw",NA)
a<-if_else(a>0,"win",a<0,"loss",a==0,"draw")
a
a<-if_else(a>0,"win",NA,a<0,"loss",a==0,"draw")
a<-if(a>0,"win",ifelse(a<0,"loss","draw"))
a<-ifelse(a>0,"win",ifelse(a<0,"loss","draw"))
a
df3$POLARITY<-ifelse(df3$POLARITY<0,"Negative",ifelse(df3$POLARITY==0,"Neutral","Positive"))
unique(df3$POLARITY)
df3<-complete.cases(df3)
str(df3)
#1
users<-mobile[sample(nrow(mobile), 1000), ]
users$Reviews<-str_remove_all(users$Reviews,pattern = "[:punct:]")
user_id<-c(1:1000)
df<-data.frame(user,users$Reviews)
avg<-scores(polarity(text.var = df$users.Reviews,grouping.var = df$user))
head(avg)
#2
df2<-data.frame(BRAND=users$Brand.Name,REVIEWS=users$Reviews,RATING=users$Rating)
df3<-cbind(id=rownames(df2),df2)
head(df3)
#3
df3$POLARITY<-avg$ave.polarity
head(df3,2)
#4
fill <- "#4271AE"
line <- "#1F3552"
ggplot(df3, aes(factor(df3$RATING),df3$POLARITY))+geom_boxplot(fill = fill, colour = line) +
scale_y_continuous(name = "average polarity score")+
scale_x_discrete(name = "Rating") +
ggtitle("The rating given by the user and polarity score") +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.position = "bottom", legend.direction = "horizontal",
legend.box = "horizontal",
legend.key.size = unit(1, "cm"),
axis.title = element_text(size = 12),
legend.text = element_text(size = 9),
legend.title=element_text(face = "bold", size = 9))
##as we see there is positive correlation but it is noticable that we have outliers,
#for instance there are some comments that were given given negative polarity score
# at the same time having 5 or 4 sciore.Quite contrary  some positive reviews present
# which have 1 or 2 scores. So we may coclude people could make mistake while giving
#rating score.
df3<-df[complete.cases(df3),]
str(df3$POLARITY)
df3$POLARITY<-ifelse(df3$POLARITY<0,"Negative",ifelse(df3$POLARITY==0,"Neutral","Positive"))
#1
users<-mobile[sample(nrow(mobile), 1000), ]
users$Reviews<-str_remove_all(users$Reviews,pattern = "[:punct:]")
user_id<-c(1:1000)
df<-data.frame(user,users$Reviews)
avg<-scores(polarity(text.var = df$users.Reviews,grouping.var = df$user))
head(avg)
#2
df2<-data.frame(BRAND=users$Brand.Name,REVIEWS=users$Reviews,RATING=users$Rating)
df3<-cbind(id=rownames(df2),df2)
head(df3)
#3
df3$POLARITY<-avg$ave.polarity
head(df3,2)
#4
fill <- "#4271AE"
line <- "#1F3552"
ggplot(df3, aes(factor(df3$RATING),df3$POLARITY))+geom_boxplot(fill = fill, colour = line) +
scale_y_continuous(name = "average polarity score")+
scale_x_discrete(name = "Rating") +
ggtitle("The rating given by the user and polarity score") +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
legend.position = "bottom", legend.direction = "horizontal",
legend.box = "horizontal",
legend.key.size = unit(1, "cm"),
axis.title = element_text(size = 12),
legend.text = element_text(size = 9),
legend.title=element_text(face = "bold", size = 9))
##as we see there is positive correlation but it is noticable that we have outliers,
#for instance there are some comments that were given given negative polarity score
# at the same time having 5 or 4 sciore.Quite contrary  some positive reviews present
# which have 1 or 2 scores. So we may coclude people could make mistake while giving
#rating score.
str(df3$POLARITY)
df3$POLARITY<-ifelse(df3$POLARITY<0,"Negative",ifelse(df3$POLARITY==0,"Neutral","Positive"))
df3<-df3[complete.cases(df3),]
ggplot(df3,aes(POLARITY))+geom_bar(stat = "identity")+
facet_grid(.~BRAND)
ggplot(df3,aes(POLARITY))+geom_bar(stat = "count")+
facet_grid(.~BRAND)
ggplot(df3,aes(POLARITY,fill=POLARITY))+geom_bar(stat = "count")+
facet_grid(.~BRAND)
ggplot(df3,aes(BRAND,fill=POLARITY))+geom_bar(stat = "count")+
facet_grid(.~BRAND)+
ggplot(df3,aes(BRAND,fill=POLARITY))+geom_bar(stat = "count")+
facet_grid(.~BRAND)+
ggplot(df3,aes(BRAND,fill=POLARITY))+geom_bar(stat = "count")
ggplot(df3,aes(fill=POLARITY))+geom_bar(stat = "count")
df3$POLARITY<-as.factor(df3$POLARITY)
ggplot(df3,aes(POLARITY))+geom_bar()+facet_grid(.~BRAND)
df3$POLARITY<-factor(df3$POLARITY)
ggplot(df3,aes(POLARITY))+geom_bar()+facet_grid(.~BRAND)
ggplot(df3,aes(POLARITY))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.ticks.x.top = element_text(angle = 90,vjust = 1,size = 6))
ggplot(df3,aes(POLARITY))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.text.x =  = element_text(angle = 90,vjust = 1,size = 6))
ggplot(df3,aes(POLARITY))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.text.x   = element_text(angle = 90,vjust = 1,size = 6))
ggplot(df3,aes(POLARITY))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.text.x   = element_text(angle = 90,vjust = 1,size = 10))
ggplot(df3,aes(POLARITY))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.text.x   = element_blank())
ggplot(df3,aes(POLARITY,fill=BRAND))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.text.x   = element_blank())
ggplot(df3,aes(POLARITY,fill=BRAND))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.text.x   = element_blank(),
axis.title.x.top = element_blank())
ggplot(df3,aes(POLARITY,fill=BRAND))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.text.x   = element_blank(),
axis.text.x.top = element_blank())
ggplot(df3,aes(POLARITY,fill=BRAND))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.text.x   = element_blank())
ggplot(df3,aes(POLARITY,fill=BRAND))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.text.x   = element_blank(),
strip.text = element_text(angle = 90))
ggplot(df3,aes(POLARITY,fill=BRAND))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.text.x   = element_blank(),
strip.text = element_text(size = 2))
ggplot(df3,aes(POLARITY,fill=BRAND))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.text.x   = element_blank(),
strip.text = element_text(size = 4))
ggplot(df3,aes(POLARITY,fill=BRAND))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.text.x   = element_blank(),
strip.text = element_text(size = 8))
ggplot(df3,aes(POLARITY,fill=BRAND))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.text.x   = element_blank(),
strip.text = element_text(angle=60,size = 8))
ggplot(df3,aes(POLARITY,fill=BRAND))+geom_bar()+facet_grid(.~BRAND)+
theme(axis.text.x   = element_blank(),
strip.text = element_text(angle=60,size = 8))+
ggtitle("Distribution of Positive, Negative and Neutral reviews for each brand.")
??Dissimilarity
Dissimilarity(df3$REVIEWS,grouping.var = df3$BRAND)
as.matrix(Dissimilarity(df3$REVIEWS,grouping.var = df3$BRAND))
dis_my<-as.matrix(Dissimilarity(df3$REVIEWS,grouping.var = df3$BRAND))
which(max(dis_my))
which(dis_my=max(dis_my))
dis_my
max(dis_my)
which(max(dis_my))
dis_my[2,2]
dis_my[2,3]
which(dis_my,max(dis_my))
which(dis_my==max(dis_my))
dis_my(3,5)
which(dis_my==max(dis_my))
dis_my
which(dis_my==max(dis_my),arr.ind = T)
dis_my
which(dis_my==max(dis_my),arr.ind = T)
which(dis_my==max(dis_my),arr.ind = T,useNames = F)
which(dis_my==max(dis_my),arr.ind = T,useNames = T)
dis_my
dis_my<-as.matrix(Dissimilarity(df3$POLARITY,grouping.var = df3$BRAND))
dis_my
dis_my<-as.matrix(Dissimilarity(df3$REVIEWS,grouping.var = df3$BRAND))
dis_my
which(dis_my==max(dis_my),arr.ind = T,useNames = T)
##most similar samsung apple
which(dis_my==min(dis_my),arr.ind = T,useNames = T)
dis_my
##most similar samsung apple
which(dis_my==min(dis_my),arr.ind = T,useNames = T)
##most similar samsung apple
which(dis_my==min(dis_my),arr.ind = T,useNames = T)
##most similar samsung apple
which(dis_my==min(dis_my),arr.ind = F,useNames = T)
T
##most similar samsung apple
which(dis_my==min(dis_my),arr.ind = T,useNames = T)
min(dis_my)
dis_my
## we need not count zeros because they happen when Brands compares with itself
ifelse(dis_my==0,NA)
## we need not count zeros because they happen when Brands compares with itself
dis_my[dis_my==0]<-NA
dis_my
mins(dis_my)
min(dis_my)
min(dis_my,na.rm = T)
which(dis_my==min(dis_my,na.rm = T),arr.ind = T,useNames = T)
```{r warnings=F}
```{r warning=F}
#first lets create another column
mobile$nchar<-nchar(mobile$Reviews)
ggplot(mobile,aes(mobile$nchar))+geom_histogram(binwidth = 8)+
xlim(0,400)+labs(title="the distribution of Review length",x="Number of characters",y="Reviews")
```{r warning=False}
#first lets create another column
mobile$nchar<-nchar(mobile$Reviews)
ggplot(mobile,aes(mobile$nchar))+geom_histogram(binwidth = 8)+
xlim(0,400)+labs(title="the distribution of Review length",x="Number of characters",y="Reviews")
```{r warning F}
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
library(stringr)
library(tm)
library(wordcloud)
library(Matrix)
library(SnowballC)
library(RColorBrewer)
str(mobile)
##from this we can conclude several thing such as we may say there is
# a overrated Lenovo which has high price but did not satisfy users expectation.Moreover,
ggplot(plot1,aes(avgScore,avgPrice,color=Brand))+geom_col(width = 0.02)+
labs(title="the average rating and average price of each brand.",x=
"Rating",y="Price",legend="Brand")+
geom_text(aes(label=Brand),size=3)
```{r comment=False}
##from this we can conclude several thing such as we may say there is
# a overrated Lenovo which has high price but did not satisfy users expectation.Moreover,
ggplot(plot1,aes(avgScore,avgPrice,color=Brand))+geom_col(width = 0.02)+
labs(title="the average rating and average price of each brand.",x=
"Rating",y="Price",legend="Brand")+
geom_text(aes(label=Brand),size=3)
ggplot(plot1,aes(avgScore,avgPrice,color=Brand))+geom_point()+
labs(title="the average rating and average price of each brand.",x=
"Rating",y="Price",legend="Brand")+
geom_text(aes(label=Brand),size=3.5,alpha=0.8)
##from this we can conclude several thing such as we may say there is
# a overrated Lenovo which has high price but did not satisfy users expectation.Moreover,
ggplot(plot1,aes(avgScore,avgPrice,color=Brand))+geom_col(width = 0.02)+
labs(title="the average rating and average price of each brand.",x=
"Rating",y="Price",legend="Brand")+
geom_text(aes(label=Brand),size=3)
ggplot(mobile,aes(mobile$Rating,fill=factor(mobile$Brand.Name)))+geom_bar(binwidth = 0.5)+
labs(title="Barplot of fistribution of scores ",x="Scores",fill="Brands")
vec<-c("Arman Hovespyan", "Davtyan Anna", "Anna 002 Hambardzumyan", "/01 Sargis 239 Hovakimyan99")
vec<-c("Arman Hovespyan", "Davtyan Anna", "Anna 002 Hambardzumyan", "/01 Sargis 239 Hovakimyan99")
vec<-trimws(str_remove_all(vec,c("[0-9/]",'.+yan',)))
vec<-trimws(str_remove_all(vec,pattern=c("[0-9/]",'.+yan',)))
vec<-trimws(str_remove_all(vec,pattern=c("[0-9/]",'.+yan')))
vec
vec<-c("Arman Hovespyan", "Davtyan Anna", "Anna 002 Hambardzumyan", "/01 Sargis 239 Hovakimyan99")
vec<-trimws(str_remove_all(vec,pattern=c("[0-9/]",'.+yan.+')))
vec
vec<-c("Arman Hovespyan", "Davtyan Anna", "Anna 002 Hambardzumyan", "/01 Sargis 239 Hovakimyan99")
vec<-c("Arman Hovespyan", "Davtyan Anna", "Anna 002 Hambardzumyan", "/01 Sargis 239 Hovakimyan99")
vec<-trimws(str_remove_all(vec,"[0-9/]"))
vec<-unlist(strsplit(vec,split = " "))
vec<-str_remove_all(vec,pattern = '.+yan')
vec<-vec[vec!=""]
vec
mobile%>%
select(Brand.Name,Rating)%>%
filter(Brand.Name %in% c("APPLE", "SAMSUNG", "HTC" , "LENOVO"))%>%
ggplot(aes(Rating))+geom_bar()+
facet_grid(.~Brand.Name)+ggtitle("Rating Distribution of each Brand")
